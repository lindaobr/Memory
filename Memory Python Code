# implementation of card game - Memory

import simplegui
import random

deck = []
exposed = []
turn = 0

# helper function to initialize globals
def new_game():
    global state, deck, exposed, turn
    state = 0  
    turn = 0    
    list1 = range(0,8)
    list2 = range(0,8)
    deck = list1 + list2
    random.shuffle(deck)
    exposed = [False for i in range(16)]
     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global state, card1, card2, turn
    index = pos[0]// 50       
   
    if state == 0:	#start        
        exposed[index] = True 
        card1 = index               
        state = 1           
    elif state == 1:	#single exposed card
        turn += 1
        if not exposed[index]:              
            card2 = index
            exposed[card2] = True
            state = 2               
    elif state == 2:	#end of a turn 
        if not exposed[index]:
            if deck[card1] == deck[card2]:
                pass
            else:
                exposed[card1] = False
                exposed[card2] = False
            card1 = index
            exposed[card1] = True
            state = 1
                                 
# cards are logically 50x100 pixels in size    
def draw(canvas):
    global deck    
    card_pt = 20
    poly_pt = 0
    label.set_text("Turns = " + str(turn))  
    
    for i in range (len(deck)):
        if exposed[i]:   
            canvas.draw_text(str(deck[i]), (card_pt, 50), 40, "White")            
        else:
            canvas.draw_polygon([[poly_pt, 0], [poly_pt, 100], [50 + poly_pt, 100], [50 + poly_pt, 0]], 1, 'Red', 'Green')
        card_pt += 50    
        poly_pt += 50 
        
# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
